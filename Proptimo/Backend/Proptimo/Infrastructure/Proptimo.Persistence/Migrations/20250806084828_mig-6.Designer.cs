// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proptimo.Persistence.Context;

#nullable disable

namespace Proptimo.Persistence.Migrations
{
    [DbContext(typeof(ProptimoDbContext))]
    [Migration("20250806084828_mig-6")]
    partial class mig6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proptimo.Domain.Entities.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListingType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RealEstateAddressId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RealEstateTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateAddressId")
                        .IsUnique();

                    b.HasIndex("RealEstateTypeId");

                    b.ToTable("RealEstates");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateAddress", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuildingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoorNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(9, 6)
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("NeighborhoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealEstateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RealEstateAddresses");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("RealEstateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateId");

                    b.ToTable("RealEstateImages");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RealEstateTypes");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateTypeFeature", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Options")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealEstateTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateTypeId");

                    b.ToTable("RealEstateTypeFeatures");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateTypeFeatureValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RealEstateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RealEstateTypeFeatureId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("ValueBool")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValueDecimal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ValueInt")
                        .HasColumnType("int");

                    b.Property<string>("ValueString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RealEstateId");

                    b.HasIndex("RealEstateTypeFeatureId");

                    b.ToTable("realEstateTypeFeatureValues");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstate", b =>
                {
                    b.HasOne("Proptimo.Domain.Entities.RealEstateAddress", "RealEstateAddress")
                        .WithOne("RealEstate")
                        .HasForeignKey("Proptimo.Domain.Entities.RealEstate", "RealEstateAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proptimo.Domain.Entities.RealEstateType", "RealEstateType")
                        .WithMany("RealEstates")
                        .HasForeignKey("RealEstateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstateAddress");

                    b.Navigation("RealEstateType");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateImage", b =>
                {
                    b.HasOne("Proptimo.Domain.Entities.RealEstate", "RealEstate")
                        .WithMany("Images")
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstate");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateTypeFeature", b =>
                {
                    b.HasOne("Proptimo.Domain.Entities.RealEstateType", "RealEstateType")
                        .WithMany("RealEstateTypeFeatures")
                        .HasForeignKey("RealEstateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstateType");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateTypeFeatureValue", b =>
                {
                    b.HasOne("Proptimo.Domain.Entities.RealEstate", "RealEstate")
                        .WithMany("FeatureValues")
                        .HasForeignKey("RealEstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proptimo.Domain.Entities.RealEstateTypeFeature", "RealEstateTypeFeature")
                        .WithMany()
                        .HasForeignKey("RealEstateTypeFeatureId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RealEstate");

                    b.Navigation("RealEstateTypeFeature");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstate", b =>
                {
                    b.Navigation("FeatureValues");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateAddress", b =>
                {
                    b.Navigation("RealEstate")
                        .IsRequired();
                });

            modelBuilder.Entity("Proptimo.Domain.Entities.RealEstateType", b =>
                {
                    b.Navigation("RealEstateTypeFeatures");

                    b.Navigation("RealEstates");
                });
#pragma warning restore 612, 618
        }
    }
}
